---
- name: Check if host exists in tower inventory
  gather_facts: false
  hosts: localhost

  tasks:
    - block:
      - name: "Fail if Extra Variable {{ HOSTS }} does not exist in Ansible Tower's inventory"
        fail:
          msg: "{{ item }} does not exist in Ansible Tower's inventory."
        when: "item not in groups['all']"
        with_items: "{{HOSTS}}"

      rescue:
      - name: Failure to get host in tower inventory
        debug:
          msg: "OUTPUT: FAILED :  This target host {{ HOSTS }} does not exist in the Tower Ansible Inventory"
        failed_when: True

# restart the Control-M service on windows host 
- name: windows service restart
  hosts: "{{ HOSTS }}"
  tasks:
   - block:

     - name: DESCRIPTION
       set_fact:
         #DESCRIPTION: "[hi][hello][server1][Spooler] [Service Status] [server2][serveice restart]"
         DESCRIPTION: "{{ DESCRIPTION }}"
         #state: restarted
         
     - name: print description
       debug:
        msg: "{{ DESCRIPTION }}"

     - name: Use regex to find the service name
       set_fact:
        SERVICE: "{{ DESCRIPTION | regex_search('\\[[^\\]]+\\]\\s*\\[Service Status\\]') | regex_replace('\\s*\\[Service Status\\]$', '') | regex_replace('\\[|\\]', '') }}"
       when: DESCRIPTION is search('\\[[^\\]]+\\]\\s*\\[Service Status\\]') 

     - name: print description
       debug:
        msg: "{{ SERVICE }}"      
       
     - name: Log output for service status before restart
       win_shell:
         Get-Service "{{ SERVICE }}"
       changed_when: false

     - name: service restart
       win_service:
         name: "{{ SERVICE }}"
         state: restarted
     
     - name: Log output for service status after restart
       win_shell:
         Get-Service "{{ SERVICE }}"
       changed_when: false

     - name: Log output for when successful
       debug:
         msg:
          - "OUTPUT: SUCCESSFUL on {{ HOSTS }} for {{ SERVICE }}"

     rescue:
     - name: Log output for when failed
       debug:
         msg:
          - "OUTPUT: FAILED : Task {{ ansible_failed_task.name}} failed on {{ HOSTS }} : {{ ansible_failed_result.msg }}"
       failed_when: True